/*================ Color Variables ================*/
$color-primary: {{ settings.color_primary }};
$color-secondary: {{ settings.color_secondary }};

// Text colors
$color-body-text: {{ settings.color_body_text }};

// Backgrounds
$color-body: #fff;

// Border colors
$color-border: #f6f6f6;

// Helper colors for form error states
$color-disabled: #000;
$color-disabled-border: #000;
$color-error: #000;
$color-error-bg: #000;
$color-success: #000;
$color-success-bg: #000;

/*================ Typography Variables ================*/
@font-face {
  font-family: "Franchise";
  src: url('{{ "font_franchise-regular.eot" | asset_url }}');
  src: url('{{ "font_franchise-regular.woff2" | asset_url }}') format('woff2'),
      url(' {{ "font_franchise-regular.eot?#iefix" | asset_url }} ') format('embedded-opentype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Trade Gothic";
  src: url('{{ "Trade Gothic LT.eot" | asset_url }}');
  src: url('{{ "Trade Gothic LT.woff2" | asset_url }}') format('woff2'),
       url('{{ "Trade Gothic LT.eot?#iefix" | asset_url }}') format('embedded-opentype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Trade Gothic Bold Condensed No. 20";
  src: url('{{ "Trade Gothic Bold Condensed No. 20.eot " | asset_url }}');
  src: url('{{ "Trade Gothic Bold Condensed No. 20.woff2" | asset_url }}') format('woff2'),
       url('{{ "Trade Gothic Bold Condensed No. 20.eot?#iefix" | asset_url }}') format('embedded-opentype');
  font-weight: normal;
  font-style: normal;
}

$font-weight-normal: 400;
$font-weight-bold: 700;

$font-stack-header: {{ settings.type_headers_font }}, sans-serif;
$font-weight-header: $font-weight-bold;

$font-stack-body: {{ settings.type_body_font }}, sans-serif;
$font-size-base: {{ settings.type_body_size }};

/*============================================================================
  Grid Breakpoints and Class Names
    - Do not change the variable names
==============================================================================*/
$grid-medium: 750px;
$grid-large: 990px;
$grid-widescreen: 1200px;
$grid-gutter: 0px;

$small: 'small';
$medium: 'medium';
$medium-down: 'medium-down';
$medium-up: 'medium-up';
$large: 'large';
$large-down: 'large-down';
$large-up: 'large-up';
$widescreen: 'widescreen';

// The `$breakpoints` list is used to build our media queries.
// You can use these in the media-query mixin.
$breakpoints: (
  $small '(max-width: #{$grid-medium - 1})',
  $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',
  $medium-down '(max-width: #{$grid-large - 1})',
  $medium-up '(min-width: #{$grid-medium})',
  $large '(min-width: #{$grid-large}) and (max-width: #{$grid-widescreen - 1})',
  $large-down '(max-width: #{$grid-widescreen - 1})',
  $large-up '(min-width: #{$grid-large})',
  $widescreen '(min-width: #{$grid-widescreen})'
);

/*============================================================================
  Generate breakpoint-specific column widths and push classes
    - Default column widths: $breakpoint-has-widths: ($small, $medium-up);
    - Default is no push classes
    - Will not work if `styles/global/grid.scss` is removed
==============================================================================*/
$breakpoint-has-widths: ($small, $medium-up);
$breakpoint-has-push: ();

/*================ Sizing Variables ================*/
$width-site: 1024px;
$gutter: 15px;

/*================ Z-Index ================*/
$z-index-dropdown: 2;
$z-index-skip-to-content: 10000; // really high to be safe of app markup

/*================ SVG ================*/
$svg-select-icon: #{'{{ "ico-select.svg" | asset_url }}'};
